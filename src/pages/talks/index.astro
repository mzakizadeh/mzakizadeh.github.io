---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/base/Header.astro";
import { MY_NAME } from "../../consts";
import { getCollection } from "astro:content";

const allTalks = (await getCollection("talks")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);

const posters = allTalks.filter((talk) => talk.data.type === "poster");
const talks = allTalks.filter((talk) => talk.data.type === "talk");

// Collect all photos from album fields
const allPhotos = allTalks
  .filter((talk) => talk.data.album && talk.data.album.length > 0)
  .flatMap((talk) => 
    talk.data.album!.map((photo) => {
      const isObject = typeof photo === 'object';
      return {
        src: isObject ? photo.src : photo,
        caption: isObject ? photo.caption : undefined,
        title: talk.data.title,
        venue: talk.data.venue,
        date: talk.data.date,
      };
    })
  )
  .sort((a, b) => b.date.valueOf() - a.date.valueOf());

function formatDate(date: Date) {
  const month = new Intl.DateTimeFormat("en", { month: "short" }).format(date);
  const year = date.getFullYear().toString().slice(-2);
  return `[${month} '${year}]`;
}
---

<Layout
  title={`Talks - ${MY_NAME}`}
  description="Presentations and talks by Mahdi Zakizadeh"
>
  <main>
    <Header />
    <div class="talks-page">
      <!-- Posters Section -->
      <section>
        <h2 class="section-header">Posters</h2>
        <ul class="posters-list">
          {
            posters.map((talk) => (
              <li>
                <span class="date">{formatDate(talk.data.date)}</span>
                <div class="content">
                  <strong>{talk.data.title}</strong> — {talk.data.venue}
                  {talk.data.poster && (
                    <div class="links">
                      <a href={talk.data.poster} target="_blank">
                        poster
                      </a>
                    </div>
                  )}
                </div>
              </li>
            ))
          }
        </ul>
      </section>

      <!-- Talks Section -->
      <section>
        <h2 class="section-header">Talks</h2>
        <ul>
          {
            talks.map((talk) => (
              <li>
                <span class="date">{formatDate(talk.data.date)}</span>
                <div class="content">
                  <div class="title">
                    <strong>{talk.data.title}</strong>
                  </div>
                  <!-- prettier-ignore -->
                  <div class="venue">
                    {talk.data.venue}{talk.data.description && (
                      <span class="desc">, {talk.data.description}</span>
                    )}
                  </div>
                  {(talk.data.slides || talk.data.video || talk.data.link) && (
                    <div class="links">
                      {talk.data.slides && (
                        <>
                          <a href={talk.data.slides} target="_blank">
                            slides
                          </a>
                        </>
                      )}
                      {talk.data.slides &&
                        (talk.data.video || talk.data.link) && (
                          <span class="separator"> | </span>
                        )}
                      {talk.data.video && (
                        <>
                          <a href={talk.data.video} target="_blank">
                            video
                          </a>
                        </>
                      )}
                      {talk.data.video && talk.data.link && (
                        <span class="separator"> | </span>
                      )}
                      {talk.data.link && (
                        <>
                          <a href={talk.data.link} target="_blank">
                            list
                          </a>
                        </>
                      )}
                    </div>
                  )}
                </div>
              </li>
            ))
          }
        </ul>
      </section>

      <!-- Photo Gallery Section -->
      {allPhotos.length > 0 && (
        <section>
          <h2 class="section-header">Photos</h2>
          <div class="photo-gallery">
            {allPhotos.map((photo) => (
              <div class="photo-item">
                <img src={photo.src} alt={photo.caption || photo.title} />
                {(photo.caption || photo.venue) && (
                  <div class="photo-caption">
                    {photo.caption && <p class="caption-text">{photo.caption}</p>}
                    {!photo.caption && <p class="caption-context">{photo.venue}</p>}
                  </div>
                )}
              </div>
            ))}
          </div>
        </section>
      )}
    </div>
  </main>
</Layout>

<style>
  section {
    margin-bottom: 3rem;
  }

  section:first-of-type {
    margin-top: 1rem;
  }

  .section-header {
    font-size: 1.2rem;
    font-weight: 600;
    color: white;
    margin-bottom: 1rem;
    letter-spacing: 1px;
  }

  .section-header::after {
    content: "¬";
    padding-left: 0.5rem;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  li {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 0;
    padding-bottom: 1.2rem;
  }

  li:last-child {
    padding-bottom: 0;
  }

  .date {
    color: var(--primary);
    min-width: 6.2rem;
    flex-shrink: 0;
    font-size: 1rem;
  }

  .content {
    flex: 1;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.5;
    font-size: 1rem;
  }

  .content .title {
    margin-bottom: 0.2rem;
  }

  .content strong {
    color: white;
    font-weight: 600;
  }

  .content .venue {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 0.3rem;
  }

  .desc {
    color: rgba(255, 255, 255, 0.7);
  }

  .links {
    font-size: 0.9rem;
    margin-top: 0.3rem;
  }

  .photo-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
  }

  .photo-item {
    position: relative;
    overflow: hidden;
  }

  .photo-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .photo-caption {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    margin: 0.5rem;
    padding: 0.4rem 0.6rem;
    background: rgba(0, 0, 0, 0.75);
    backdrop-filter: blur(4px);
    border-radius: 4px;
    width: fit-content;
    max-width: calc(100% - 1rem);
  }

  .caption-text {
    color: white;
    font-size: 0.75rem;
    margin: 0;
    line-height: 1.3;
  }

  .caption-context {
    color: var(--primary);
    font-size: 0.7rem;
    margin: 0;
    font-style: italic;
  }

  a {
    color: var(--primary);
    text-decoration: none;
  }

  a:hover {
    color: var(--secondary);
  }

  @media (max-width: 720px) {
    section:first-of-type {
      margin-top: 0.5rem;
    }

    .section-header {
      font-size: 1.1rem;
    }

    li {
      flex-direction: column;
      gap: 0.3rem;
      margin-bottom: 1rem;
      padding-bottom: 1rem;
    }

    .date {
      min-width: auto;
      font-size: 0.9rem;
    }

    .content {
      font-size: 0.95rem;
    }

    .photo-gallery {
      grid-template-columns: 1fr;
    }
  }
</style>
